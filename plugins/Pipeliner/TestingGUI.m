clear
clc

NumberOfFieldsAndFieldSpace = [2 0.4 1 .4];

Row1 = { { 'style' 'text' 'string' 'FFT Comparator' 'fontweight' 'bold' } ...
    {} ...
    {  'style' 'text' 'string' '' } ...
    {  'style' 'text' 'string' '' } ...
    {  'style' 'text' 'string' '' } };

NumofRejectionsPerTemplate  = { { 'style' 'text' 'string' 'Num of Rejections Per Template' } ...
    { 'style' 'edit' 'string' '2' } ...
    { 'style' 'text' 'string' 'Ex. "2" for two removals per 000*.set template ' } ...
    { 'style' 'text' 'string' 'Default = 2' } };

CorrolationThreshold  = { { 'style' 'text' 'string' 'Correlation Threshold For Removal' } ...
    { 'style' 'edit' 'string' '.90' } ...
    { 'style' 'text' 'string' 'Ex ".90" remove a 90% correlation' } ...
    { 'style' 'text' 'string' 'Default = .90' } };

MinimumVariancetoRemove1  = { { 'style' 'text' 'string' 'Minimum Variance Explained To Remove Comp' } ...
    { 'style' 'edit' 'string' '101' } ...
    { 'style' 'text' 'string' 'Ex "101" To Analyze all components' } ...
    { 'style' 'text' 'string' 'Default = 101' } };
MinimumVariancetoRemove2  = { { 'style' 'text' 'string' '' } ...
    { 'style' 'text' 'string' '' } ...
    { 'style' 'text' 'string' 'Ex "10" Analyze if 10% or less of Var. explained' }  ...
    { 'style' 'text' 'string' '' } };

Header2 = { { 'style' 'text' 'string' 'IClabeler setting to check the probility of Components Idenitfied as Bad by Correlation' 'fontweight' 'bold' } ...
    {  'style' 'text' 'string' '' } ...
    {  'style' 'text' 'string' '' } ...
    {  'style' 'text' 'string' '' } ...
    };
MaximumVariancetoRemoveBrain1  = { { 'style' 'text' 'string' 'Maximum probability allowed to remove Component with "Brain"' } ...
    { 'style' 'edit' 'string' '101' } ...
    { 'style' 'text' 'string' 'Ex "101" To Analyze all components' } ...
    { 'style' 'text' 'string' 'Default = 101' } };
MaximumVariancetoRemoveBrain2  = { { 'style' 'text' 'string' '' } ...
    { 'style' 'text' 'string' '' } ...
    { 'style' 'text' 'string' 'Ex "10" Allow removal if 10% probability or below' } ...
    { 'style' 'text' 'string' '' } };
MaximumVariancetoRemoveBrain3  = { { 'style' 'text' 'string' '' } ...
    { 'style' 'text' 'string' '' } ...
    { 'style' 'text' 'string' '' } ...
    { 'style' 'text' 'string' '' } };


MinimumVariancetoRemoveMuscle  = { { 'style' 'text' 'string' 'Minimum probability needed to remove Component for "Muscle"' } ...
    { 'style' 'edit' 'string' '90' } ...
    { 'style' 'text' 'string' 'Ex "90" Allow removal if 90% probability or above' } ...
    { 'style' 'text' 'string' 'Default = 90' } };

MinimumVariancetoRemoveEye  = { { 'style' 'text' 'string' 'Minimum probability needed to remove Component for "Eye"' } ...
    { 'style' 'edit' 'string' '90' } ...
    { 'style' 'text' 'string' 'Ex "90" Allow removal if 90% probability or above' } ...
    { 'style' 'text' 'string' 'Default = 90' } };

MinimumVariancetoRemoveHeart  = { { 'style' 'text' 'string' 'Minimum probability needed to remove Component for "Heart"' } ...
    { 'style' 'edit' 'string' '90' } ...
    { 'style' 'text' 'string' 'Ex "90" Allow removal if 90% probability or above' } ...
    { 'style' 'text' 'string' 'Default = 90' } };

MinimumVariancetoRemoveLineNoise  = { { 'style' 'text' 'string' 'Minimum probability needed to remove Component for "Line Noise"' } ...
    { 'style' 'edit' 'string' '90' } ...
    { 'style' 'text' 'string' 'Ex "90" Allow removal if 90% probability or above' } ...
    { 'style' 'text' 'string' 'Default = 90' } };

MinimumVariancetoRemoveChannelNoise  = { { 'style' 'text' 'string' 'Minimum probability needed to remove Component for "Channel Noise"' } ...
    { 'style' 'edit' 'string' '90' } ...
    { 'style' 'text' 'string' 'Ex "90" Allow removal if 90% probability or above' } ...
    { 'style' 'text' 'string' 'Default = 90' } };

MinimumVariancetoRemoveChannelOther  = { { 'style' 'text' 'string' 'Minimum probability needed to remove Component for "Other"' } ...
    { 'style' 'edit' 'string' '101' } ...
    { 'style' 'text' 'string' 'Ex "101" Will not remove the based on this parameter' } ...
    { 'style' 'text' 'string' 'Default = 101' } };

allGeom = { 1 NumberOfFieldsAndFieldSpace };
   
    Row1 = [ Row1(:)' NumofRejectionsPerTemplate(:)'];
    allGeom{end+1} = NumberOfFieldsAndFieldSpace;
    Row1 = [ Row1(:)' CorrolationThreshold(:)'];
    allGeom{end+1} = NumberOfFieldsAndFieldSpace;
    Row1 = [ Row1(:)' MinimumVariancetoRemove1(:)'];
    allGeom{end+1} = NumberOfFieldsAndFieldSpace;
    Row1 = [ Row1(:)' MinimumVariancetoRemove2(:)'];
    allGeom{end+1} = NumberOfFieldsAndFieldSpace;
    Row1 = [ Row1(:)' Header2(:)'];
    allGeom{end+1} = NumberOfFieldsAndFieldSpace;
    Row1 = [ Row1(:)' MaximumVariancetoRemoveBrain1(:)'] ;
    allGeom{end+1} = NumberOfFieldsAndFieldSpace;
    Row1 = [ Row1(:)' MaximumVariancetoRemoveBrain2(:)'] ;
    allGeom{end+1} = NumberOfFieldsAndFieldSpace;
    Row1 = [ Row1(:)' MaximumVariancetoRemoveBrain3(:)'] ;
    allGeom{end+1} = NumberOfFieldsAndFieldSpace;
    Row1 = [ Row1(:)' MinimumVariancetoRemoveMuscle(:)'];
    allGeom{end+1} = NumberOfFieldsAndFieldSpace;
    Row1 = [ Row1(:)' MinimumVariancetoRemoveEye(:)'];
    allGeom{end+1} = NumberOfFieldsAndFieldSpace;
    Row1 = [ Row1(:)' MinimumVariancetoRemoveHeart(:)'];
    allGeom{end+1} = NumberOfFieldsAndFieldSpace;
    Row1 = [ Row1(:)' MinimumVariancetoRemoveLineNoise(:)'];
    allGeom{end+1} = NumberOfFieldsAndFieldSpace;
    Row1 = [ Row1(:)' MinimumVariancetoRemoveChannelNoise(:)'];
    allGeom{end+1} = NumberOfFieldsAndFieldSpace;
    Row1 = [ Row1(:)' MinimumVariancetoRemoveChannelOther(:)'];
    allGeom{end+1} = NumberOfFieldsAndFieldSpace;    


res = inputgui(allGeom, Row1);
if isempty(res)
    return
end

numOfRejectionsPerTemplate = str2double(res(1,1));
threshold = str2double(res(1,2));
%Set the Minimum Variance Explained by Component needed for artifact threshold analysis
Minimum_Variance_To_Remove_Comp = str2double(res(1,3)); %If this is set to 101 it will allow all componet to be analyzed for threshold
%Set the maximum probability of brain allowed in removed component
Brain_Percent_Threshold = str2double(res(1,4));  %If this is set to 101 it will allow all componet to be analyzed for threshold
%Set the minimum probability of each artifact needed to remove component
Muscle_Percent_Threshold = str2double(res(1,5)); 
Eye_Percent_Threshold = str2double(res(1,6));
Heart_Percent_Threshold = str2double(res(1,7));
Line_Noise_Percent_Threshold = str2double(res(1,8));
Channel_Noise_Percent_Threshold = str2double(res(1,9));
Other_Percent_Threshold = str2double(res(1,10));
